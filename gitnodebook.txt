1、初始化 git config user.name "youname"
	  git config user.email "email"
2、创建版本库 git init
通过git init命令把这个目录变成Git可以管理的仓库

3. git add readme.txt
	
	git commit -m "本次信息"

4. git staus 
git status命令可以让我们时刻掌握仓库当前的状态，上面的命令告诉我们，readme.txt被修改过了，但还没有准备提交的修改

git diff filename ：查看差异， 按Q退出 git diff 

git log 版本查看日志，最近到最远的提交日志

git reset --hard HEAD^ 滚回上一个版本
git reset --hard HEAD^^ 滚回上上个版本
git reset --hard HEAD~100 滚回上100个版本。

git reset --hard 3628164 滚到3628164版本。版本号没必要写全，前几位就可以了，Git会自动去找。当然也不能只写前一两位，因为Git可能会找到多个版本号，就无法确定是哪一个了

git reflog 记录每一次的命令。可用于版本间滚动。

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

工作区（Working Directory）

就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区：

工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。

Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD


第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。



